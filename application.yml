# Определение базовых URL сервисов
services:
  notification: http://localhost:8087   # Сервис уведомлений
  auth: http://localhost:8095          # Сервис аутентификации
  frontend: http://localhost:8010      # Фронтенд
  profile: http://localhost:8090       # Сервис профилей
  admin: http://localhost:8020         # Админ-сервис
  minio: http://localhost:8030         # MinIO для хранения файлов
  cloud: http://localhost:8888         # Дополнительный облачный сервис для обеспечения общей конфигурации
  tariff: http://localhost:8085        # Сервис тарифов

# Конфигурация CORS: разрешённые источники берутся из свойств services
cors:
  allowed-origins:
    - ${services.notification}
    - ${services.auth}
    - ${services.frontend}
    - ${services.profile}
    - ${services.admin}
    - ${services.minio}
    - ${services.cloud}
    - ${services.tariff}

# Определение URL эндпоинтов для различных операций
endpoints:
  notification:
    sendMail: ${services.notification}/api/notification/send      # Отправка почты
    publicSendMail: ${services.notification}/api/public-notification/send  # Публичная отправка почты
  auth:
    resetRequest: ${services.auth}/api/auth/reset-password         # Сброс пароля
    verificationRequest: ${services.auth}/api/auth/verify-email    # Подтверждение email
  frontend:
    recovery-request: ${services.frontend}/password_recovery       # URL для сброса пароля во фронтенде
    login: ${services.frontend}/login                              # URL для авторизации
  profile:
    getAllProfiles: ${services.profile}/api/profile                # Получение всех профилей
    getUnverifiedProfiles: ${services.profile}/api/profile/unverified  # Непроверенные профили
    verifyProfile: ${services.profile}/api/profile/verify          # Верификация профиля
    cancelValidation: ${services.profile}/api/profile/cancel-validation  # Отмена валидации профиля
  minio:
    uploadFile: ${services.minio}/api/file/upload                  # Загрузка файла в MinIO

# Настройки загрузки файлов
spring:
  servlet:
    multipart:
      max-file-size: 50MB       # Максимальный размер загружаемого файла
      max-request-size: 100MB   # Максимальный размер запроса с файлами

  # Настройки базы данных
  datasource:
    url: jdbc:postgresql://localhost:5432/flm_project  # URL базы данных
    username: postgres                                # Имя пользователя
    password: 1                                       # Пароль (следует зашифровать)
    driver-class-name: org.postgresql.Driver          # Класс драйвера PostgreSQL
  jpa:
    hibernate:
      ddl-auto: none                                  # Никакие изменения структуры не выполняются автоматически
    show-sql: true                                   # Показывать SQL-запросы в логах
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect  # Диалект Hibernate для PostgreSQL

  # Настройки безопасности
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/demo             # URI эмитента токенов
          jwk-set-uri: http://localhost:8081/realms/demo/protocol/openid-connect/certs  # URI для получения JWK
